# Generated by Django 2.1 on 2022-04-04 16:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gram_to_brand', '0001_initial'),
        ('accounts', '0001_initial'),
        ('shops', '0001_initial'),
        ('brand', '0002_auto_20220404_1624'),
        ('addresses', '0002_auto_20220404_1624'),
        ('products', '0002_auto_20220404_1624'),
        ('retailer_to_gram', '__first__'),
    ]

    operations = [
        migrations.AddField(
            model_name='vendorshopmapping',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_vendor_mappings', to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='vendorshopmapping',
            name='vendor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_shop_mapping', to='brand.Vendor'),
        ),
        migrations.AddField(
            model_name='po_message',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by_user_message', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='picklistitems',
            name='grn_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pick_list_cart', to='gram_to_brand.GRNOrder', verbose_name='GRN No'),
        ),
        migrations.AddField(
            model_name='picklistitems',
            name='pick_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pick_list_items_pick_list', to='gram_to_brand.PickList'),
        ),
        migrations.AddField(
            model_name='picklistitems',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pick_product', to='products.Product'),
        ),
        migrations.AddField(
            model_name='picklist',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pick_list_cart', to='retailer_to_gram.Cart'),
        ),
        migrations.AddField(
            model_name='picklist',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pick_list_order', to='retailer_to_gram.Order'),
        ),
        migrations.AddField(
            model_name='orderedproductreserved',
            name='cart',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retiler_ordered_retailer_cart', to='retailer_to_gram.Cart'),
        ),
        migrations.AddField(
            model_name='orderedproductreserved',
            name='order_product_reserved',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retiler_order_product_order_product_reserved', to='gram_to_brand.GRNOrderProductMapping'),
        ),
        migrations.AddField(
            model_name='orderedproductreserved',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retiler_product_order_product_reserved', to='products.Product'),
        ),
        migrations.AddField(
            model_name='order',
            name='ordered_cart',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='order_cart_mapping', to='gram_to_brand.Cart'),
        ),
        migrations.AddField(
            model_name='grnorderproductmapping',
            name='grn_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grn_order_grn_order_product', to='gram_to_brand.GRNOrder'),
        ),
        migrations.AddField(
            model_name='grnorderproductmapping',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='last_modified_user_grn_order_product', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='grnorderproductmapping',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_grn_order_product', to='products.Product'),
        ),
        migrations.AddField(
            model_name='grnorderproductmapping',
            name='vendor_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_grn_products', to='products.ProductVendorMapping'),
        ),
        migrations.AddField(
            model_name='grnorder',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='last_modified_user_grn_order', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='grnorder',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_grn_order', to='gram_to_brand.Order', verbose_name='PO Number'),
        ),
        migrations.AddField(
            model_name='grnorder',
            name='products',
            field=models.ManyToManyField(through='gram_to_brand.GRNOrderProductMapping', to='products.Product'),
        ),
        migrations.AddField(
            model_name='document',
            name='grn_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grn_order_images', to='gram_to_brand.GRNOrder'),
        ),
        migrations.AddField(
            model_name='cartproductmapping',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_list', to='gram_to_brand.Cart'),
        ),
        migrations.AddField(
            model_name='cartproductmapping',
            name='cart_parent_product',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_parent_product_mapping', to='products.ParentProduct'),
        ),
        migrations.AddField(
            model_name='cartproductmapping',
            name='cart_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_product_mapping', to='products.Product'),
        ),
        migrations.AddField(
            model_name='cartproductmapping',
            name='vendor_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_products', to='products.ProductVendorMapping'),
        ),
        migrations.AddField(
            model_name='cart',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_approved_carts', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='cart',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brand_order', to='brand.Brand'),
        ),
        migrations.AddField(
            model_name='cart',
            name='gf_billing_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing_address_cart', to='addresses.Address'),
        ),
        migrations.AddField(
            model_name='cart',
            name='gf_shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipping_address_cart', to='addresses.Address'),
        ),
        migrations.AddField(
            model_name='cart',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='last_modified_user_cart', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='cart',
            name='po_message',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_message_dt', to='gram_to_brand.Po_Message'),
        ),
        migrations.AddField(
            model_name='cart',
            name='po_raised_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_raise_user_cart', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(through='gram_to_brand.CartProductMapping', to='products.Product'),
        ),
        migrations.AddField(
            model_name='cart',
            name='supplier_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buyer_vendor_order', to='brand.Vendor'),
        ),
        migrations.AddField(
            model_name='cart',
            name='supplier_state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='state_cart', to='addresses.State'),
        ),
        migrations.AddField(
            model_name='brandnote',
            name='grn_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grn_order_brand_note', to='gram_to_brand.GRNOrder'),
        ),
        migrations.AddField(
            model_name='brandnote',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='last_modified_user_brand_note', to='accounts.User'),
        ),
        migrations.AlterUniqueTogether(
            name='cartproductmapping',
            unique_together={('cart', 'cart_product')},
        ),
    ]

# Generated by Django 2.1 on 2022-04-04 16:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BrandNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_note_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Debit Note ID')),
                ('note_type', models.CharField(choices=[('debit_note', 'Debit Note')], default='debit_note', max_length=255)),
                ('amount', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Debit Note',
                'verbose_name_plural': 'Debit Notes',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_no', models.CharField(blank=True, max_length=255, null=True)),
                ('po_status', models.CharField(blank=True, choices=[('OPEN', 'Open'), ('WAIT', 'Waiting For Finance Approval'), ('APRW', 'Finance Approved'), ('RJCT', 'Finance Disapproved'), ('PDLV', 'Partial Delivered'), ('PDLC', 'Partial Delivered and Closed'), ('PARR', 'Partial Return'), ('DLVR', 'Completely delivered and Closed'), ('CNCL', 'Canceled'), ('CLS', 'Closed'), ('PDA', 'Pending for approval')], max_length=200, null=True)),
                ('po_creation_date', models.DateField(auto_now_add=True)),
                ('po_validity_date', models.DateField()),
                ('payment_term', models.TextField(blank=True, null=True)),
                ('delivery_term', models.TextField(blank=True, null=True)),
                ('cart_product_mapping_csv', models.FileField(blank=True, null=True, upload_to='gram/brand/cart_product_mapping_csv')),
                ('is_approve', models.BooleanField(blank=True, default=False, null=True)),
                ('is_vendor_notified', models.BooleanField(blank=True, default=False)),
                ('is_warehouse_notified', models.BooleanField(blank=True, default=False)),
                ('po_delivery_date', models.DateField(null=True)),
                ('cart_type', models.PositiveSmallIntegerField(choices=[(1, 'Manual'), (2, 'Auto')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'PO Generation',
                'permissions': (('can_approve_and_disapprove', 'Can approve and dis-approve'), ('can_create_po', 'Can create po')),
            },
        ),
        migrations.CreateModel(
            name='CartProductMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_tax_percentage', models.FloatField(db_column='tax_percentage', null=True)),
                ('inner_case_size', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('case_size', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('number_of_cases', models.FloatField(blank=True, default=0, null=True)),
                ('scheme', models.FloatField(blank=True, default=0, help_text='data into percentage %', null=True)),
                ('no_of_pieces', models.PositiveIntegerField(blank=True, null=True)),
                ('price', models.FloatField(verbose_name='Brand To Gram Price')),
                ('per_unit_price', models.FloatField(blank=True, default=0, null=True)),
                ('is_grn_done', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Select Product',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(blank=True, max_length=255, null=True)),
                ('document_image', models.FileField(blank=True, null=True, upload_to='brand_invoice')),
            ],
        ),
        migrations.CreateModel(
            name='GRNOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=255)),
                ('invoice_date', models.DateField(null=True)),
                ('invoice_amount', models.DecimalField(decimal_places=4, default='0.0000', max_digits=20)),
                ('tcs_amount', models.DecimalField(decimal_places=4, default='0.0000', max_digits=20)),
                ('grn_id', models.CharField(blank=True, max_length=255, null=True)),
                ('grn_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'View GRN Detail',
                'verbose_name_plural': 'View GRN Details',
            },
        ),
        migrations.CreateModel(
            name='GRNOrderProductMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_invoice_price', models.FloatField(default=0)),
                ('product_invoice_qty', models.PositiveIntegerField(default=0)),
                ('manufacture_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(null=True)),
                ('delivered_qty', models.PositiveIntegerField(default=0)),
                ('available_qty', models.PositiveIntegerField(default=0)),
                ('returned_qty', models.PositiveIntegerField(default=0)),
                ('damaged_qty', models.PositiveIntegerField(default=0)),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('barcode_id', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'GRN Product Detail',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='PO Number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Add GRN',
                'verbose_name_plural': 'Add GRN',
            },
        ),
        migrations.CreateModel(
            name='OrderedProductReserved',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserved_qty', models.PositiveIntegerField(default=0)),
                ('order_reserve_end_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('reserve_status', models.CharField(choices=[('reserved', 'Reserved'), ('ordered', 'Ordered'), ('free', 'Free')], default='reserved', max_length=100)),
            ],
            options={
                'verbose_name': 'Ordered Product Reserved',
                'verbose_name_plural': 'Ordered Product Reserved',
            },
        ),
        migrations.CreateModel(
            name='PickList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Pick List',
                'verbose_name_plural': 'Pick List',
            },
        ),
        migrations.CreateModel(
            name='PickListItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pick_qty', models.PositiveIntegerField(default=0)),
                ('return_qty', models.PositiveIntegerField(default=0)),
                ('damage_qty', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Po_Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendorShopMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]

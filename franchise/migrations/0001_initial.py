# Generated by Django 2.1 on 2022-04-04 16:24

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('audit', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FranchiseReturns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_loc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Shop Location')),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('product_sku', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.FloatField(blank=True, default=0, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('sr_date', models.DateTimeField(blank=True, null=True)),
                ('sr_number', models.CharField(blank=True, max_length=255, null=True)),
                ('invoice_date', models.DateTimeField(blank=True, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=255, null=True)),
                ('process_status', models.IntegerField(choices=[(0, 'Started'), (1, 'Processed'), (2, 'Error')], default=0)),
                ('error', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone number is not valid', regex='^[6-9]\\d{9}$')])),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FranchiseSales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_loc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Shop Location')),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('product_sku', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.FloatField(blank=True, default=0, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('invoice_date', models.DateTimeField(blank=True, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=255, null=True)),
                ('discount_amount', models.FloatField(blank=True, default=0, null=True)),
                ('process_status', models.IntegerField(choices=[(0, 'Started'), (1, 'Processed'), (2, 'Error')], default=0)),
                ('rewards_status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Rewarded'), (2, 'Failed')], default=0)),
                ('error', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone number is not valid', regex='^[6-9]\\d{9}$')])),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HdposDataFetch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Sales'), (1, 'Returns')])),
                ('from_date', models.DateTimeField(blank=True, null=True)),
                ('to_date', models.DateTimeField(blank=True, null=True)),
                ('process_text', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Started'), (1, 'Completed'), (2, 'Error')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='HdposInventoryHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_sku', models.CharField(blank=True, max_length=255, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.CharField(blank=True, max_length=255, null=True)),
                ('error', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShopLocationMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=255, unique=True, verbose_name='Shop Location')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WmsInventoryHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faudit',
            fields=[
            ],
            options={
                'verbose_name': 'Audit',
                'proxy': True,
                'indexes': [],
            },
            bases=('audit.auditdetail',),
        ),
    ]

# Generated by Django 2.1 on 2022-04-04 16:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('coupon', '0004_auto_20220404_1624'),
        ('wms', '0001_initial'),
        ('retailer_to_sp', '0001_initial'),
        ('shops', '0001_initial'),
        ('addresses', '0002_auto_20220404_1624'),
        ('pos', '0001_initial'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryChangePos',
            fields=[
            ],
            options={
                'verbose_name': 'Inventory Change',
                'proxy': True,
                'indexes': [],
            },
            bases=('wms.posinventorychange',),
        ),
        migrations.CreateModel(
            name='InventoryPos',
            fields=[
            ],
            options={
                'verbose_name': 'Inventory',
                'proxy': True,
                'indexes': [],
            },
            bases=('wms.posinventory',),
        ),
        migrations.CreateModel(
            name='InventoryStatePos',
            fields=[
            ],
            options={
                'verbose_name': 'Inventory State',
                'proxy': True,
                'indexes': [],
            },
            bases=('wms.posinventorystate',),
        ),
        migrations.CreateModel(
            name='RetailerCart',
            fields=[
            ],
            options={
                'verbose_name': 'Buyer - Cart',
                'proxy': True,
                'indexes': [],
            },
            bases=('retailer_to_sp.cart',),
        ),
        migrations.CreateModel(
            name='RetailerCartProductMapping',
            fields=[
            ],
            options={
                'verbose_name': 'Cart Product Mapping',
                'proxy': True,
                'indexes': [],
            },
            bases=('retailer_to_sp.cartproductmapping',),
        ),
        migrations.CreateModel(
            name='RetailerCoupon',
            fields=[
            ],
            options={
                'verbose_name': 'Coupon',
                'proxy': True,
                'indexes': [],
            },
            bases=('coupon.coupon',),
        ),
        migrations.CreateModel(
            name='RetailerCouponRuleSet',
            fields=[
            ],
            options={
                'verbose_name': 'Coupon Ruleset',
                'proxy': True,
                'indexes': [],
            },
            bases=('coupon.couponruleset',),
        ),
        migrations.CreateModel(
            name='RetailerOrderCancel',
            fields=[
            ],
            options={
                'verbose_name': 'Cancel Order',
                'proxy': True,
                'indexes': [],
            },
            bases=('retailer_to_sp.cart',),
        ),
        migrations.CreateModel(
            name='RetailerOrderedProduct',
            fields=[
            ],
            options={
                'verbose_name': 'Buyer - Order',
                'proxy': True,
                'indexes': [],
            },
            bases=('retailer_to_sp.orderedproduct',),
        ),
        migrations.CreateModel(
            name='RetailerOrderedProductMapping',
            fields=[
            ],
            options={
                'verbose_name': 'Ordered Product Mapping',
                'proxy': True,
                'indexes': [],
            },
            bases=('retailer_to_sp.orderedproductmapping',),
        ),
        migrations.CreateModel(
            name='RetailerOrderedReport',
            fields=[
            ],
            options={
                'verbose_name': 'Order - Report',
                'proxy': True,
                'indexes': [],
            },
            bases=('retailer_to_sp.order',),
        ),
        migrations.CreateModel(
            name='RetailerOrderReturn',
            fields=[
            ],
            options={
                'verbose_name': 'Buyer - Return',
                'proxy': True,
                'indexes': [],
            },
            bases=('retailer_to_sp.orderreturn',),
        ),
        migrations.CreateModel(
            name='RetailerReturnItems',
            fields=[
            ],
            options={
                'verbose_name': 'Return Item',
                'proxy': True,
                'indexes': [],
            },
            bases=('retailer_to_sp.returnitems',),
        ),
        migrations.CreateModel(
            name='RetailerRuleSetProductMapping',
            fields=[
            ],
            options={
                'verbose_name': 'Coupon Ruleset Product Mapping',
                'proxy': True,
                'indexes': [],
            },
            bases=('coupon.rulesetproductmapping',),
        ),
        migrations.AddField(
            model_name='vendor',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='addresses.City'),
        ),
        migrations.AddField(
            model_name='vendor',
            name='retailer_shop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retailer_shop_vendor', to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='vendor',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='addresses.State'),
        ),
        migrations.AddField(
            model_name='shopcustomermap',
            name='shop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registered_shop', to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='shopcustomermap',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registered_user', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='retailerproductimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retailer_product_image', to='pos.RetailerProduct'),
        ),
        migrations.AddField(
            model_name='retailerproduct',
            name='linked_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Product'),
        ),
        migrations.AddField(
            model_name='retailerproduct',
            name='measurement_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='pos.MeasurementCategory'),
        ),
        migrations.AddField(
            model_name='retailerproduct',
            name='product_ref',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discounted_product', to='pos.RetailerProduct', verbose_name='Reference Product'),
        ),
        migrations.AddField(
            model_name='retailerproduct',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retailer_product', to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='productchangefields',
            name='product_change',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='price_change_cols', to='pos.ProductChange'),
        ),
        migrations.AddField(
            model_name='productchange',
            name='changed_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.User'),
        ),
        migrations.AddField(
            model_name='productchange',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retailer_product', to='pos.RetailerProduct'),
        ),
        migrations.AddField(
            model_name='postrip',
            name='shipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pos_trips', to='retailer_to_sp.OrderedProduct'),
        ),
        migrations.AddField(
            model_name='posreturnitems',
            name='grn_return_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grn_order_return', to='pos.PosReturnGRNOrder'),
        ),
        migrations.AddField(
            model_name='posreturnitems',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grn_product_return', to='pos.RetailerProduct'),
        ),
        migrations.AddField(
            model_name='posreturngrnorder',
            name='grn_ordered_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='grn_order_return', to='pos.PosGRNOrder'),
        ),
        migrations.AddField(
            model_name='posreturngrnorder',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grn_return_last_modified_user', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='posreturngrnorder',
            name='vendor_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='vendor_return', to='pos.Vendor'),
        ),
        migrations.AddField(
            model_name='posorder',
            name='ordered_cart',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pos_po_order', to='pos.PosCart'),
        ),
        migrations.AddField(
            model_name='posgrnorderproductmapping',
            name='grn_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='po_grn_products', to='pos.PosGRNOrder'),
        ),
        migrations.AddField(
            model_name='posgrnorderproductmapping',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pos_product_grn_order_product', to='pos.RetailerProduct'),
        ),
        migrations.AddField(
            model_name='posgrnorder',
            name='added_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grn_order_added', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='posgrnorder',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grn_order_last_modified', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='posgrnorder',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos.PosOrder', verbose_name='PO Number'),
        ),
        migrations.AddField(
            model_name='posgrnorder',
            name='products',
            field=models.ManyToManyField(through='pos.PosGRNOrderProductMapping', to='pos.RetailerProduct'),
        ),
        migrations.AddField(
            model_name='poscartproductmapping',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='po_products', to='pos.PosCart'),
        ),
        migrations.AddField(
            model_name='poscartproductmapping',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos.RetailerProduct'),
        ),
        migrations.AddField(
            model_name='poscartproductmapping',
            name='qty_conversion_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rt_unit_pos_cart_mapping', to='pos.MeasurementUnit'),
        ),
        migrations.AddField(
            model_name='poscart',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_last_modified_user', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='poscart',
            name='products',
            field=models.ManyToManyField(through='pos.PosCartProductMapping', to='pos.RetailerProduct'),
        ),
        migrations.AddField(
            model_name='poscart',
            name='raised_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_raise_user', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='poscart',
            name='retailer_shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='poscart',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos.Vendor'),
        ),
        migrations.AlterUniqueTogether(
            name='paymenttype',
            unique_together={('app', 'type')},
        ),
        migrations.AddField(
            model_name='paymentstatusupdatebycron',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='retailer_to_sp.Order'),
        ),
        migrations.AddField(
            model_name='paymentstatusupdatebycron',
            name='payment_type',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='pos.PaymentType'),
        ),
        migrations.AddField(
            model_name='payment',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='rt_payment_retailer_order', to='retailer_to_sp.Order'),
        ),
        migrations.AddField(
            model_name='payment',
            name='paid_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rt_payment_retailer_buyer', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_type',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='payment_type_payment', to='pos.PaymentType'),
        ),
        migrations.AddField(
            model_name='payment',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rt_payment_retailer', to='accounts.User'),
        ),
        migrations.AddField(
            model_name='measurementunit',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurement_category_unit', to='pos.MeasurementCategory'),
        ),
        migrations.AddField(
            model_name='document',
            name='grn_order',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pos_grn_invoice', to='pos.PosGRNOrder'),
        ),
        migrations.AddField(
            model_name='bulkretailerproduct',
            name='seller_shop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pos_bulk_seller_shop', to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='bulkretailerproduct',
            name='uploaded_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='product_uploaded_by', to='accounts.User'),
        ),
        migrations.CreateModel(
            name='DiscountedRetailerProduct',
            fields=[
            ],
            options={
                'verbose_name': 'Discounted Product',
                'verbose_name_plural': 'Discounted Products',
                'proxy': True,
                'indexes': [],
            },
            bases=('pos.retailerproduct',),
        ),
        migrations.AlterUniqueTogether(
            name='posreturnitems',
            unique_together={('grn_return_id', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='poscartproductmapping',
            unique_together={('cart', 'product')},
        ),
    ]

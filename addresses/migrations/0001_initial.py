# Generated by Django 2.1 on 2022-04-04 16:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nick_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line1', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid address. Special characters allowed are # - , / . ( ) &', regex='^[\\w*\\s*\\#\\-\\,\\/\\.\\(\\)\\&]*$')])),
                ('address_contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address_contact_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(code='INVALID_MOBILE_NUMBER', message='Mobile Number is not valid', regex='^[6-9]\\d{9}$')])),
                ('pincode', models.CharField(blank=True, max_length=6, validators=[django.core.validators.RegexValidator(code='INVALID_PINCODE', message='Invalid Pincode', regex='^[1-9][0-9]{5}$')])),
                ('address_type', models.CharField(choices=[('billing', 'Billing'), ('shipping', 'Shipping'), ('registered', 'Registered')], default='shipping', max_length=255)),
                ('latitude', models.FloatField(blank=True, default=0, null=True)),
                ('longitude', models.FloatField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(db_index=True, max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='DispatchCenterCityMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Dispatch Center City Mapping',
                'verbose_name_plural': 'Dispatch Center City Mappings',
            },
        ),
        migrations.CreateModel(
            name='DispatchCenterPincodeMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Dispatch Center Pincode Mapping',
                'verbose_name_plural': 'Dispatch Center Pincode Mappings',
            },
        ),
        migrations.CreateModel(
            name='InvoiceCityMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_code', models.CharField(default='07', max_length=255)),
                ('city', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_city_code_mapping', to='addresses.City')),
            ],
            options={
                'verbose_name': 'Invoice City Mapping',
                'verbose_name_plural': 'Invoice City Mappings',
            },
        ),
        migrations.CreateModel(
            name='Pincode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.CharField(db_index=True, max_length=6, validators=[django.core.validators.RegexValidator(code='INVALID_PINCODE', message='Invalid Pincode', regex='^[1-9][0-9]{5}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_pincode', to='addresses.City')),
            ],
            options={
                'verbose_name_plural': 'Pincodes',
                'ordering': ['pincode'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('state_code', models.CharField(blank=True, max_length=2, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_state', to='addresses.Country')),
            ],
        ),
    ]

# Generated by Django 2.1 on 2018-10-04 17:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nick_name', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Name is not valid', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('address_line1', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Name is not valid', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Name is not valid', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('locality', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Name is not valid', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('address_type', models.CharField(choices=[('billing', 'Billing'), ('shipping', 'Shipping'), ('registered', 'Registered')], default='billing', max_length=255)),
                ('latitude', models.FloatField(blank=True, default=0, null=True)),
                ('longitude', models.FloatField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Name is not valid', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Name is not valid', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Name is not valid', regex='^[a-zA-Z\\s]{2,255}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_address', to='addresses.City'),
        ),
        migrations.AddField(
            model_name='address',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_address', to='addresses.Country'),
        ),
        migrations.AddField(
            model_name='address',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_address', to='addresses.State'),
        ),
    ]

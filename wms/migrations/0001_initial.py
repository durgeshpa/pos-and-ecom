# Generated by Django 2.1 on 2022-04-04 16:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('retailer_to_sp', '0001_initial'),
        ('shops', '0001_initial'),
        ('pos', '0001_initial'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('upload_csv', models.FileField(blank=True, null=True, upload_to='shop_photos/shop_name/documents/audit/')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_user', to='accounts.User')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
            options={
                'db_table': 'wms_audit',
            },
        ),
        migrations.CreateModel(
            name='Bin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bin_id', models.CharField(blank=True, max_length=20, null=True)),
                ('bin_type', models.CharField(choices=[('PA', 'Pallet'), ('SR', 'Slotted Rack'), ('HD', 'Heavy Duty Rack')], default='PA', max_length=50)),
                ('is_active', models.BooleanField()),
                ('bin_barcode_txt', models.CharField(blank=True, max_length=20, null=True)),
                ('bin_barcode', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='BinInternalInventoryChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_type', models.CharField(blank=True, choices=[('warehouse_adjustment', 'WareHouse Adjustment'), ('reserved', 'Reserved'), ('ordered', 'Ordered'), ('released', 'Released'), ('canceled', 'Canceled'), ('audit_adjustment', 'Audit Adjustment'), ('put_away_type', 'Put Away'), ('pickup_created', 'Pickup Created'), ('pickup_complete', 'Pickup Complete'), ('picking_cancelled', 'Pickup Cancelled'), ('stock_correction_in_type', 'stock_correction_in_type'), ('stock_correction_out_type', 'stock_correction_out_type'), ('expired', 'expired'), ('manual_audit_add', 'Manual Audit Add'), ('manual_audit_deduct', 'Manual Audit Deduct'), ('audit_correction_add', 'Audit Correction Add'), ('audit_correction_deduct', 'Audit Correction Deduct'), ('franchise_batch_in', 'Franchise Batch In'), ('franchise_sales', 'Franchise Sales'), ('franchise_returns', 'Franchise Returns'), ('repackaging', 'Repackaging'), ('moved_to_discounted', 'Moved To Discounted'), ('added_as_discounted', 'Added As Discounted'), ('bin_shift', 'Bin Shift')], max_length=25, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=25, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Weight In gm')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('final_bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='final_bin', to='wms.Bin')),
            ],
            options={
                'db_table': 'wms_bin_internal_inventory_change',
            },
        ),
        migrations.CreateModel(
            name='BinInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Weight In gm')),
                ('to_be_picked_qty', models.PositiveIntegerField(default=0, verbose_name='To Be Picked')),
                ('in_stock', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.Bin')),
            ],
            options={
                'db_table': 'wms_bin_inventory',
            },
        ),
        migrations.CreateModel(
            name='Crate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('crate_id', models.CharField(blank=True, max_length=16, null=True)),
                ('crate_type', models.CharField(choices=[('DP', 'Dispatch'), ('PK', 'Picking'), ('SR', 'Storage')], max_length=50)),
                ('crate_barcode_txt', models.CharField(blank=True, max_length=20, null=True)),
                ('crate_barcode', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_crate_created_by', to='accounts.User', verbose_name='Created by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_crate_updated_by', to='accounts.User', verbose_name='Updated by')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExpiredInventoryMovement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('mrp', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('expiry_date', models.DateField()),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'open'), (1, 'closed')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.Bin')),
            ],
        ),
        migrations.CreateModel(
            name='In',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_type', models.CharField(blank=True, max_length=20, null=True)),
                ('in_type_id', models.CharField(blank=True, max_length=20, null=True)),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Weight In gm')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('manufacturing_date', models.DateField(null=True)),
                ('expiry_date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_state', models.CharField(blank=True, choices=[('total_available', 'TOTAL AVAILABLE'), ('available', 'AVAILABLE'), ('reserved', 'RESERVED'), ('shipped', 'SHIPPED'), ('to_be_picked', 'TO BE PICKED'), ('ordered', 'Ordered'), ('picked', 'PICKED'), ('canceled', 'Canceled'), ('new', 'New'), ('repackaging', 'Repackaging')], max_length=20, null=True)),
            ],
            options={
                'db_table': 'wms_inventory_state',
            },
        ),
        migrations.CreateModel(
            name='InventoryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_type', models.CharField(blank=True, choices=[('normal', 'NORMAL'), ('expired', 'EXPIRED'), ('damaged', 'DAMAGED'), ('discarded', 'DISCARDED'), ('disposed', 'DISPOSED'), ('missing', 'MISSING'), ('returned', 'RETURNED'), ('new', 'New')], max_length=20, null=True)),
            ],
            options={
                'db_table': 'wms_inventory_type',
            },
        ),
        migrations.CreateModel(
            name='OrderReserveRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(blank=True, max_length=25, null=True)),
                ('release_type', models.CharField(blank=True, choices=[('cron', 'CRON'), ('manual', 'Manual')], max_length=25, null=True)),
                ('ordered_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('reserved_time', models.DateTimeField(blank=True, null=True)),
                ('release_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='products.Product', to_field='product_sku')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='Out',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('out_type', models.CharField(blank=True, max_length=50, null=True)),
                ('out_type_id', models.CharField(blank=True, max_length=20, null=True)),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Weight In gm')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('inventory_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryType')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='outs', to='products.Product', to_field='product_sku')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='Pickup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_type', models.CharField(blank=True, max_length=20, null=True)),
                ('pickup_type_id', models.CharField(blank=True, max_length=20, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('pickup_quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(blank=True, choices=[('pickup_creation', 'PickUp Creation'), ('picking_assigned', 'Pickup Assigned'), ('picking_complete', 'Pickup Complete'), ('picking_cancelled', 'Pickup Cancelled')], max_length=21, null=True)),
                ('is_crate_applicable', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(null=True)),
                ('inventory_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryType')),
                ('out', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.Out')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='rt_product_pickup', to='products.Product', to_field='product_sku')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='PickupBinInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('pickup_quantity', models.PositiveIntegerField(default=None, null=True)),
                ('bin_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('last_picked_at', models.DateTimeField(null=True)),
                ('remarks', models.CharField(choices=[(0, '--'), (1, 'Near Expiry / Expired'), (2, 'Damaged'), (3, 'Item not found'), (4, 'Different MRP'), (5, 'Different Grammage'), (6, 'Item not clean')], max_length=100, null=True)),
                ('audit_no', models.CharField(max_length=100, null=True)),
                ('bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.BinInventory')),
            ],
            options={
                'db_table': 'wms_pickup_bin_inventory',
            },
        ),
        migrations.CreateModel(
            name='PickupCrate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('quantity', models.PositiveIntegerField()),
                ('is_in_use', models.BooleanField(default=True)),
                ('crate', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='crates_pickup', to='wms.Crate')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_pickupcrate_created_by', to='accounts.User', verbose_name='Created by')),
                ('pickup', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='pickup_crates', to='wms.Pickup')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_pickupcrate_updated_by', to='accounts.User', verbose_name='Updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PosInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PosInventoryChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('transaction_type', models.CharField(choices=[('ordered', 'Ordered'), ('order_cancelled', 'Order Cancelled'), ('order_return', 'Order Return'), ('stock_add', 'Stock Add'), ('stock_update', 'Stock Update'), ('grn_add', 'GRN Add'), ('grn_update', 'GRN Update'), ('shipped', 'Shipped')], max_length=25)),
                ('transaction_id', models.CharField(max_length=25)),
                ('initial_qty', models.DecimalField(decimal_places=3, max_digits=10, null=True)),
                ('final_qty', models.DecimalField(decimal_places=3, max_digits=10, null=True)),
                ('remarks', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.User')),
            ],
        ),
        migrations.CreateModel(
            name='PosInventoryState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_state', models.CharField(choices=[('new', 'New'), ('available', 'Available'), ('ordered', 'Ordered'), ('shipped', 'Shipped')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Putaway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('putaway_type', models.CharField(blank=True, max_length=20, null=True)),
                ('putaway_type_id', models.CharField(blank=True, max_length=20, null=True)),
                ('reference_id', models.IntegerField(blank=True, null=True)),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('putaway_quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(blank=True, choices=[('NEW', 'New'), ('ASSIGNED', 'Assigned'), ('INITIATED', 'Initiated'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('inventory_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryType')),
                ('putaway_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='putaway_user', to='accounts.User')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='products.Product', to_field='product_sku')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='PutawayBinInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('putaway_type', models.CharField(blank=True, max_length=50, null=True)),
                ('putaway_quantity', models.PositiveIntegerField()),
                ('putaway_status', models.BooleanField(default=False)),
                ('remark', models.CharField(blank=True, choices=[(0, 'Not enough space')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.BinInventory')),
                ('putaway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.Putaway', verbose_name='putaway')),
                ('sku', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='products.Product', to_field='product_sku')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
            options={
                'db_table': 'wms_putaway_bin_inventory',
            },
        ),
        migrations.CreateModel(
            name='QCArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('area_id', models.CharField(blank=True, max_length=6, null=True)),
                ('area_type', models.CharField(choices=[('OA', 'Open Area'), ('RC', 'Rack'), ('PA', 'Pallet')], max_length=50)),
                ('area_barcode_txt', models.CharField(blank=True, max_length=20, null=True)),
                ('area_barcode', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_qcarea_created_by', to='accounts.User', verbose_name='Created by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_qcarea_updated_by', to='accounts.User', verbose_name='Updated by')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
            options={
                'verbose_name': 'QC Area',
            },
        ),
        migrations.CreateModel(
            name='QCDesk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('desk_number', models.CharField(blank=True, editable=False, max_length=20, null=True)),
                ('name', models.CharField(max_length=30, null=True)),
                ('desk_enabled', models.BooleanField(default=True)),
                ('alternate_desk', models.ForeignKey(blank=True, limit_choices_to={'desk_enabled': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='alternate_desk_list', to='wms.QCDesk')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_qcdesk_created_by', to='accounts.User', verbose_name='Created by')),
                ('qc_areas', models.ManyToManyField(related_name='qc_desk_areas', to='wms.QCArea')),
                ('qc_executive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qc_executive_desk_user', to='accounts.User')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_qcdesk_updated_by', to='accounts.User', verbose_name='Updated by')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
            options={
                'verbose_name': 'QC Desk',
            },
        ),
        migrations.CreateModel(
            name='QCDeskQCAreaAssignmentMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('token_id', models.CharField(blank=True, max_length=30, null=True)),
                ('area_enabled', models.BooleanField(default=True)),
                ('qc_done', models.BooleanField(default=True)),
                ('last_assigned_at', models.DateTimeField(null=True, verbose_name='Last Assigned At')),
                ('alternate_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.QCArea')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_qcdeskqcareaassignmentmapping_created_by', to='accounts.User', verbose_name='Created by')),
                ('qc_area', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qc_area_assigned_desks', to='wms.QCArea')),
                ('qc_desk', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qc_desk_assigned_areas', to='wms.QCDesk')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_qcdeskqcareaassignmentmapping_updated_by', to='accounts.User', verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'QC Desk to Area Assignment Mapping',
            },
        ),
        migrations.CreateModel(
            name='QCDeskQCAreaAssignmentMappingTransactionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('token_id', models.CharField(blank=True, max_length=30, null=True)),
                ('qc_done', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_qcdeskqcareaassignmentmappingtransactionlog_created_by', to='accounts.User', verbose_name='Created by')),
                ('qc_area', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='wms.QCArea')),
                ('qc_desk', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='wms.QCDesk')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_qcdeskqcareaassignmentmappingtransactionlog_updated_by', to='accounts.User', verbose_name='Updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockCorrectionChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('correction_type', models.CharField(blank=True, max_length=10, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Weight In gm')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'wms_stock_correction_change',
            },
        ),
        migrations.CreateModel(
            name='StockMovementCSVUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('upload_csv', models.FileField(blank=True, null=True, upload_to='shop_photos/shop_name/documents/inventory/')),
                ('inventory_movement_type', models.CharField(choices=[(1, '-'), (2, 'Bin Stock Movement'), (3, 'Stock Correction'), (4, 'WareHouse Inventory Change'), (5, 'Packing Material Stock Correction')], default=1, max_length=25)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_manager', to='accounts.User')),
            ],
            options={
                'db_table': 'wms_stock_movement_csv_upload',
            },
        ),
        migrations.CreateModel(
            name='WarehouseAssortment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_warehouseassortment_created_by', to='accounts.User', verbose_name='Created by')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='product_zones', to='products.ParentProduct')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_warehouseassortment_updated_by', to='accounts.User', verbose_name='Updated by')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WarehouseInternalInventoryChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(blank=True, choices=[('warehouse_adjustment', 'WareHouse Adjustment'), ('reserved', 'Reserved'), ('ordered', 'Ordered'), ('released', 'Released'), ('canceled', 'Canceled'), ('order_cancelled', 'Order Cancelled'), ('audit_adjustment', 'Audit Adjustment'), ('put_away_type', 'Put Away'), ('pickup_created', 'Pickup Created'), ('picked', 'Picked'), ('picking_cancelled', 'Picking Cancelled'), ('pickup_complete', 'Pickup Complete'), ('shipped_out', 'Shipped Out'), ('stock_correction_in_type', 'stock_correction_in_type'), ('stock_correction_out_type', 'stock_correction_out_type'), ('reschedule', 'Reschedule'), ('not_attempt', 'not_attempt'), ('expired', 'Expired'), ('repackaging', 'Repackaging'), ('manual_audit_add', 'Manual Audit Add'), ('manual_audit_deduct', 'Manual Audit Deduct'), ('audit_correction_add', 'Audit Correction Add'), ('audit_correction_deduct', 'Audit Correction Deduct'), ('franchise_batch_in', 'Franchise Batch In'), ('franchise_sales', 'Franchise Sales'), ('franchise_returns', 'Franchise Returns'), ('moved_to_discounted', 'Moved To Discounted'), ('added_as_discounted', 'Added As Discounted')], max_length=25, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=25, null=True)),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Weight In gm')),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('final_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='final_stage', to='wms.InventoryState')),
                ('final_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='final_type', to='wms.InventoryType')),
                ('initial_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='initial_stage', to='wms.InventoryState')),
                ('initial_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='initial_type', to='wms.InventoryType')),
                ('inventory_csv', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.StockMovementCSVUpload')),
                ('inventory_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryState')),
                ('inventory_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryType')),
                ('sku', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='products.Product')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
            options={
                'db_table': 'wms_warehouse_internal_inventory_change',
            },
        ),
        migrations.CreateModel(
            name='WarehouseInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Weight In gm')),
                ('in_stock', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('visible', models.BooleanField(default=False)),
                ('inventory_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryState')),
                ('inventory_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryType')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_sku', to='products.Product', to_field='product_sku')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
            options={
                'db_table': 'wms_warehouse_inventory',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('zone_number', models.CharField(blank=True, editable=False, max_length=20, null=True)),
                ('name', models.CharField(max_length=30, null=True)),
                ('coordinator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coordinator_zone_user', to='accounts.User')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_zone_created_by', to='accounts.User', verbose_name='Created by')),
                ('picker_users', models.ManyToManyField(related_name='picker_zone_users', to='accounts.User')),
                ('putaway_users', models.ManyToManyField(related_name='putaway_zone_users', to='accounts.User')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervisor_zone_user', to='accounts.User')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wms_zone_updated_by', to='accounts.User', verbose_name='Updated by')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop')),
            ],
            options={
                'permissions': (('can_have_zone_warehouse_permission', 'Can have Zone Warehouse Permission'), ('can_have_zone_supervisor_permission', 'Can have Zone Supervisor Permission'), ('can_have_zone_coordinator_permission', 'Can have Zone Coordinator Permission')),
            },
        ),
        migrations.CreateModel(
            name='ZonePickerUserAssignmentMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('last_assigned_at', models.DateTimeField(null=True, verbose_name='Last Assigned At')),
                ('user_enabled', models.BooleanField(default=True)),
                ('alternate_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.User')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='picker_assigned_zone', to='accounts.User')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='zone_picker_assigned_users', to='wms.Zone')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ZonePutawayUserAssignmentMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('last_assigned_at', models.DateTimeField(null=True, verbose_name='Last Assigned At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.User')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='zone_putaway_assigned_users', to='wms.Zone')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='warehouseassortment',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='wms.Zone'),
        ),
        migrations.AddField(
            model_name='stockcorrectionchange',
            name='inventory_csv',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.StockMovementCSVUpload'),
        ),
        migrations.AddField(
            model_name='stockcorrectionchange',
            name='inventory_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryType'),
        ),
        migrations.AddField(
            model_name='stockcorrectionchange',
            name='stock_bin_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bin', to='wms.Bin'),
        ),
        migrations.AddField(
            model_name='stockcorrectionchange',
            name='stock_sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='products.Product', to_field='product_sku'),
        ),
        migrations.AddField(
            model_name='stockcorrectionchange',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='putaway',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='zone_putaway', to='wms.Zone'),
        ),
        migrations.AddField(
            model_name='posinventorychange',
            name='final_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='pos_inv_final_state', to='wms.PosInventoryState'),
        ),
        migrations.AddField(
            model_name='posinventorychange',
            name='initial_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='pos_inv_initial_state', to='wms.PosInventoryState'),
        ),
        migrations.AddField(
            model_name='posinventorychange',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='pos.RetailerProduct'),
        ),
        migrations.AddField(
            model_name='posinventory',
            name='inventory_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='wms.PosInventoryState'),
        ),
        migrations.AddField(
            model_name='posinventory',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='pos_inv_products', to='pos.RetailerProduct'),
        ),
        migrations.AddField(
            model_name='pickupbininventory',
            name='bin_zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pickup_bin_zone', to='wms.Zone'),
        ),
        migrations.AddField(
            model_name='pickupbininventory',
            name='pickup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bin_inventory', to='wms.Pickup'),
        ),
        migrations.AddField(
            model_name='pickupbininventory',
            name='shipment_batch',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rt_pickup_batch_mapping', to='retailer_to_sp.OrderedProductBatch'),
        ),
        migrations.AddField(
            model_name='pickupbininventory',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='pickup',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pickup_zone', to='wms.Zone'),
        ),
        migrations.AddField(
            model_name='orderreserverelease',
            name='warehouse_internal_inventory_release',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='internal_inventory_release', to='wms.WarehouseInternalInventoryChange'),
        ),
        migrations.AddField(
            model_name='orderreserverelease',
            name='warehouse_internal_inventory_reserve',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='internal_inventory_reserve', to='wms.WarehouseInternalInventoryChange'),
        ),
        migrations.AddField(
            model_name='in',
            name='inventory_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='wms.InventoryType'),
        ),
        migrations.AddField(
            model_name='in',
            name='sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ins', to='products.Product', to_field='product_sku'),
        ),
        migrations.AddField(
            model_name='in',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='expiredinventorymovement',
            name='inventory_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryType'),
        ),
        migrations.AddField(
            model_name='expiredinventorymovement',
            name='sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='products.Product', to_field='product_sku'),
        ),
        migrations.AddField(
            model_name='expiredinventorymovement',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='crate',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.Zone'),
        ),
        migrations.AddField(
            model_name='bininventory',
            name='inventory_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.InventoryType'),
        ),
        migrations.AddField(
            model_name='bininventory',
            name='sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='rt_product_sku', to='products.Product', to_field='product_sku'),
        ),
        migrations.AddField(
            model_name='bininventory',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='bininternalinventorychange',
            name='final_inventory_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='final_inventory_type', to='wms.InventoryType'),
        ),
        migrations.AddField(
            model_name='bininternalinventorychange',
            name='initial_bin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='initial_bin', to='wms.Bin'),
        ),
        migrations.AddField(
            model_name='bininternalinventorychange',
            name='initial_inventory_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='initial_inventory_type', to='wms.InventoryType'),
        ),
        migrations.AddField(
            model_name='bininternalinventorychange',
            name='inventory_csv',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.StockMovementCSVUpload'),
        ),
        migrations.AddField(
            model_name='bininternalinventorychange',
            name='sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='products.Product', to_field='product_sku'),
        ),
        migrations.AddField(
            model_name='bininternalinventorychange',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shops.Shop'),
        ),
        migrations.AddField(
            model_name='bin',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='wms.Zone'),
        ),
        migrations.AlterUniqueTogether(
            name='posinventory',
            unique_together={('product', 'inventory_state')},
        ),
    ]

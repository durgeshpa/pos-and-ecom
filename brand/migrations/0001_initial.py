# Generated by Django 2.1 on 2022-04-04 16:24

import brand.models
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addresses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('status', models.BooleanField(default=True)),
                ('brand_name', models.CharField(max_length=100)),
                ('brand_slug', models.SlugField(blank=True, max_length=100, null=True)),
                ('brand_logo', models.FileField(null=True, upload_to='brand_logo_file', validators=[brand.models.validate_image])),
                ('brand_description', models.TextField(blank=True, null=True)),
                ('brand_code', models.CharField(help_text='Please enter three character for SKU', max_length=3, validators=[django.core.validators.RegexValidator('^[A-Z]{3}$', 'Only three capital alphates allowed')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BrandData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_data_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'ordering': ['brand_data_order'],
            },
        ),
        migrations.CreateModel(
            name='BrandPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_name', models.CharField(max_length=255)),
                ('brand_position_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'verbose_name': 'Brand Position',
                'verbose_name_plural': 'Brand Positions',
                'ordering': ['brand_position_order'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, null=True)),
                ('vendor_name', models.CharField(max_length=255, null=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=255, null=True)),
                ('telephone_no', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile', models.CharField(max_length=10, null=True)),
                ('email_id', models.TextField(blank=True, null=True)),
                ('designation', models.CharField(max_length=255, null=True)),
                ('address_line1', models.CharField(max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid address. Special characters allowed are # - , / . ( ) &', regex='^[\\w*\\s*\\#\\-\\,\\/\\.\\(\\)\\&]*$')])),
                ('pincode', models.CharField(max_length=6, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_PINCODE', message='Invalid Pincode', regex='^[1-9][0-9]{5}$')])),
                ('payment_terms', models.TextField(blank=True, null=True)),
                ('vendor_registion_free', models.CharField(blank=True, choices=[('paid', 'Paid'), ('unpaid', 'Un-Paid')], max_length=50, null=True)),
                ('sku_listing_free', models.CharField(blank=True, choices=[('paid', 'Paid'), ('unpaid', 'Un-Paid')], max_length=50, null=True)),
                ('return_policy', models.TextField(blank=True, null=True)),
                ('GST_number', models.CharField(max_length=100, null=True)),
                ('MSMED_reg_no', models.CharField(blank=True, max_length=100, null=True)),
                ('MSMED_reg_document', models.FileField(blank=True, null=True, upload_to='vendor/msmed_doc')),
                ('fssai_licence', models.FileField(blank=True, null=True, upload_to='vendor/fssai_licence_doc')),
                ('GST_document', models.FileField(null=True, upload_to='vendor/gst_doc')),
                ('pan_card', models.FileField(null=True, upload_to='vendor/pan_card')),
                ('cancelled_cheque', models.FileField(null=True, upload_to='vendor/cancelled_cheque')),
                ('list_of_sku_in_NPI_formate', models.FileField(blank=True, null=True, upload_to='vendor/slu_list_in_npi')),
                ('vendor_form', models.FileField(blank=True, null=True, upload_to='vendor/vendor_form')),
                ('vendor_products_brand', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, editable=False, null=True, size=None)),
                ('ordering_days', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], max_length=50, null=True)),
                ('lead_time', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Lead Time(In Days)')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_city_address', to='addresses.City')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_state_address', to='addresses.State')),
            ],
        ),
    ]

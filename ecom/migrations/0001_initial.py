# Generated by Django 2.1 on 2022-04-04 16:24

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Home', 'Home'), ('Office', 'Office'), ('Other', 'Other')], default='other', max_length=20)),
                ('address', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid address. Special characters allowed are # - , / . ( ) &', regex='^[\\w*\\s*\\#\\-\\,\\/\\.\\(\\)\\&]*$')])),
                ('contact_name', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(code='INVALID_MOBILE_NUMBER', message='Mobile Number is not valid', regex='^[6-9]\\d{9}$')])),
                ('latitude', models.FloatField(blank=True, default=0, null=True)),
                ('longitude', models.FloatField(blank=True, default=0, null=True)),
                ('pincode', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(code='INVALID_PINCODE', message='Invalid Pincode', regex='^[1-9][0-9]{5}$')])),
                ('default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EcomOrderAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid address. Special characters allowed are # - , / . ( ) &', regex='^[\\w*\\s*\\#\\-\\,\\/\\.\\(\\)\\&]*$')])),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(code='INVALID_MOBILE_NUMBER', message='Mobile Number is not valid', regex='^[6-9]\\d{9}$')])),
                ('latitude', models.FloatField(blank=True, default=0, null=True)),
                ('longitude', models.FloatField(blank=True, default=0, null=True)),
                ('pincode', models.CharField(blank=True, max_length=6, validators=[django.core.validators.RegexValidator(code='INVALID_PINCODE', message='Invalid Pincode', regex='^[1-9][0-9]{5}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('position', models.IntegerField()),
                ('status', models.BooleanField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='TagProductMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]

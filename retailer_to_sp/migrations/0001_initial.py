# Generated by Django 2.1 on 2022-04-04 16:24

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BulkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('RETAIL', 'Retail'), ('BULK', 'Bulk'), ('DISCOUNTED', 'Discounted')], max_length=50, null=True)),
                ('cart_products_csv', models.FileField(null=True, upload_to='retailer/sp/cart_products_csv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart_no', models.CharField(max_length=255, null=True, unique=True)),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('cart_status', models.CharField(blank=True, choices=[('active', 'Active'), ('pending', 'Pending'), ('deleted', 'Deleted'), ('ordered', 'Ordered'), ('order_shipped', 'Dispatched'), ('partially_delivered', 'Partially Delivered'), ('delivered', 'Delivered'), ('closed', 'Closed'), ('reserved', 'Reserved')], db_index=True, max_length=200, null=True)),
                ('offers', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('approval_status', models.BooleanField(default=False, null=True)),
                ('cart_type', models.CharField(choices=[('RETAIL', 'Retail'), ('BULK', 'Bulk'), ('DISCOUNTED', 'Discounted'), ('BASIC', 'Basic'), ('EC0M', 'Ecom')], default='RETAIL', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('redeem_points', models.IntegerField(default=0)),
                ('redeem_factor', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Order Items Detail',
                'permissions': [('can_approve_bulk_type', 'Can approve Bulk type orders')],
            },
        ),
        migrations.CreateModel(
            name='CartProductMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.IntegerField(choices=[(0, 'Free'), (1, 'Purchased')], default=1)),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('qty', models.DecimalField(decimal_places=3, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('no_of_pieces', models.DecimalField(decimal_places=3, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('qty_error_msg', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('capping_error_msg', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('effective_price', models.FloatField(default=0)),
                ('discounted_price', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_note_id', models.CharField(max_length=30)),
                ('credit_note_pdf', models.FileField(blank=True, null=True, upload_to='shop_photos/shop_name/documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerCare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('complaint_id', models.CharField(blank=True, max_length=255, null=True)),
                ('email_us', models.URLField(default='help@gramfactory.com')),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('issue_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('resolved', 'Resolved')], default='pending', max_length=20, null=True)),
                ('select_issue', models.CharField(blank=True, choices=[('Cancellation', 'cancellation'), ('Return', 'return'), ('Others', 'others')], max_length=100, null=True, verbose_name='Issue')),
                ('complaint_detail', models.CharField(max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DispatchTrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('dispatch_no', models.CharField(max_length=50, null=True, unique=True)),
                ('vehicle_no', models.CharField(max_length=50)),
                ('trip_type', models.CharField(choices=[('FORWARD', 'Forward'), ('BACKWARD', 'Backward')], default='FORWARD', max_length=100)),
                ('trip_status', models.CharField(choices=[('NEW', 'New'), ('STARTED', 'Started'), ('COMPLETED', 'Completed'), ('UNLOADING', 'Unloading'), ('CLOSED', 'Closed'), ('VERIFIED', 'Verified'), ('CANCELLED', 'Cancelled')], default='NEW', max_length=100)),
                ('starts_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('opening_kms', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Vehicle Opening Trip(Kms)')),
                ('closing_kms', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Vehicle Closing Trip(Kms)')),
                ('no_of_empty_crates', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total empty crates shipped')),
                ('no_of_crates', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total crates shipped')),
                ('no_of_packets', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total packets shipped')),
                ('no_of_sacks', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total sacks shipped')),
                ('no_of_crates_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total crates collected')),
                ('no_of_packets_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total packets collected')),
                ('no_of_sacks_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total sacks collected')),
                ('no_of_empty_crates_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total empty crates collected')),
                ('weight', models.FloatField(default=0, null=True, verbose_name='Trip weight')),
            ],
            options={
                'permissions': (('can_plan_trip', 'Can Plan Trip'),),
            },
        ),
        migrations.CreateModel(
            name='DispatchTripCrateMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('crate_status', models.CharField(blank=True, choices=[('LOADED', 'Loaded'), ('UNLOADED', 'Unloaded'), ('DAMAGED_AT_LOADING', 'Damaged At Loading'), ('DAMAGED_AT_UNLOADING', 'Damaged At Unloading'), ('MISSING_AT_UNLOADING', 'Missing At Unloading')], max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DispatchTripShipmentMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('shipment_status', models.CharField(choices=[('LOADING_FOR_DC', 'Loading For Dispatch'), ('LOADED_FOR_DC', 'Loaded For Dispatch'), ('UNLOADING_AT_DC', 'Unloading At Dispatch'), ('UNLOADED_AT_DC', 'Unloaded At Dispatch'), ('CANCELLED', 'Cancelled')], max_length=100)),
                ('shipment_health', models.CharField(choices=[('OKAY', 'Okay'), ('PARTIALLY_MISSING_DAMAGED', 'Partially Missing & Damaged'), ('PARTIALLY_DAMAGED', 'Partially Damaged'), ('PARTIALLY_MISSING', 'Partially Missing'), ('FULLY_DAMAGED', 'Fully Damaged'), ('FULLY_MISSING', 'Fully Missing')], max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DispatchTripShipmentPackages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('package_status', models.CharField(choices=[('LOADED', 'Loaded'), ('UNLOADED', 'Unloaded'), ('DAMAGED_AT_LOADING', 'Damaged At Loading'), ('DAMAGED_AT_UNLOADING', 'Damaged At Unloading'), ('MISSING_AT_LOADING', 'Missing At Loading'), ('MISSING_AT_UNLOADING', 'Missing At Unloading'), ('CANCELLED', 'Cancelled'), ('PARTIALLY_VERIFIED', 'Partially Verified'), ('VERIFIED', 'Verified')], max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_experience', models.CharField(blank=True, choices=[('1', '1 Star'), ('2', '2 Star'), ('3', '3 Star'), ('4', '4 Star'), ('5', '5 Star')], max_length=2, null=True)),
                ('overall_product_packaging', models.CharField(blank=True, choices=[('1', '1 Star'), ('2', '2 Star'), ('3', '3 Star'), ('4', '4 Star'), ('5', '5 Star')], max_length=2, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(db_index=True, max_length=255, unique=True)),
                ('invoice_pdf', models.FileField(blank=True, null=True, upload_to='shop_photos/shop_name/documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='LastMileTripShipmentMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('shipment_status', models.CharField(choices=[('TO_BE_LOADED', 'To be Loaded For Dispatch'), ('LOADING_FOR_DC', 'Loading For Dispatch'), ('LOADED_FOR_DC', 'Loaded For Dispatch'), ('CANCELLED', 'Cancelled')], max_length=100)),
                ('shipment_health', models.CharField(blank=True, choices=[('OKAY', 'Okay'), ('PARTIALLY_MISSING_DAMAGED', 'Partially Missing & Damaged'), ('PARTIALLY_DAMAGED', 'Partially Damaged'), ('PARTIALLY_MISSING', 'Partially Missing'), ('FULLY_DAMAGED', 'Fully Damaged'), ('FULLY_MISSING', 'Fully Missing')], max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LastMileTripShipmentPackages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('package_status', models.CharField(choices=[('LOADED', 'Loaded'), ('DAMAGED_AT_LOADING', 'Damaged At Loading'), ('MISSING_AT_LOADING', 'Missing At Loading'), ('RETURN_VERIFIED', 'Return Verified'), ('RETURN_MISSING', 'Return Missing'), ('RETURN_DAMAGED', 'Return Damaged'), ('CANCELLED', 'Cancelled')], max_length=100, null=True)),
                ('return_remark', models.CharField(choices=[('LABEL_MISSING', 'Label Missing'), ('LABEL_DAMAGED', 'Label Damaged'), ('OTHER', 'Other')], max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_note_id', models.CharField(blank=True, max_length=255, null=True)),
                ('note_type', models.CharField(choices=[('debit_note', 'Debit Note'), ('credit_note', 'Credit Note')], default='credit_note', max_length=255)),
                ('amount', models.FloatField(default=0)),
                ('credit_note_type', models.CharField(choices=[('RETURN', 'Return'), ('DISCOUNTED', 'Discounted')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Credit Note',
                'verbose_name_plural': 'Credit Notes',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.CharField(blank=True, max_length=255, null=True)),
                ('total_mrp', models.FloatField(default=0)),
                ('order_amount', models.FloatField(default=0)),
                ('total_discount_amount', models.FloatField(default=0)),
                ('total_tax_amount', models.FloatField(default=0)),
                ('order_status', models.CharField(choices=[('ordered', 'Order Placed'), ('DISPATCH_PENDING', 'Dispatch Pending'), ('active', 'Active'), ('pending', 'Pending'), ('deleted', 'Deleted'), ('dispatched', 'Dispatched'), ('PAYMENT_PENDING', 'Payment Pending'), ('PAYMENT_FAILED', 'Payment Failed'), ('PAYMENT_APPROVED', 'Payment Approved'), ('PAYMENT_COD', 'Payment COD'), ('p_delivered', 'Partially Delivered'), ('delivered', 'Delivered'), ('closed', 'Closed'), ('payment_done_approval_pending', 'Payment Done Approval Pending'), ('opdp', 'Order Placed Dispatch Pending'), ('PARTIALLY_SHIPPED', 'Partially Shipped'), ('SHIPPED', 'Shipped'), ('CANCELLED', 'Cancelled'), ('DENIED', 'Denied'), ('payment_done_approval_pending', 'Payment Done Approval Pending'), ('opdp', 'Order Placed Dispatch Pending'), ('partially_shipped_and_closed', 'Partially shipped and closed'), ('denied_and_closed', 'Denied and Closed'), ('par_ship_created', 'Partial Shipment Created'), ('full_ship_created', 'Full Shipment Created'), ('ready_to_dispatch', 'Ready to Dispatch'), ('completed', 'Completed'), ('PICKING_PARTIAL_COMPLETE', 'Picking Partial Complete'), ('MOVED_TO_QC', 'Moved To QC Area'), ('PARTIAL_MOVED_TO_QC', 'Partially Moved To QC Area'), ('picking_complete', 'Picking Complete'), ('PICKING_ASSIGNED', 'Picking Assigned'), ('PICKUP_CREATED', 'Pickup Created'), ('partially_returned', 'Partially Returned'), ('fully_returned', 'Fully Returned'), ('picked', 'Order Processing'), ('out_for_delivery', 'Out For Delivery'), ('QC_FAILED', 'QC Failed')], max_length=50)),
                ('cancellation_reason', models.CharField(blank=True, choices=[('cna', 'Cash not available'), ('sc', 'Shop Closed'), ('rbs', 'Rescheduled by seller'), ('uta', 'Unable to attempt'), ('wo', 'Wrong Order'), ('imm', 'Item miss match'), ('di', 'Damaged item'), ('law', 'Left at Warehouse'), ('bdc', 'Before Delivery Cancelled'), ('ne', 'Near Expiry'), ('ri', 'Rate issue'), ('ap', 'Already Purchased'), ('gi', 'GST Issue'), ('cl', 'Item not clean'), ('cc', 'Cancelled by customer'), ('cu', 'Customer not available'), ('md', 'Manufacturing Defect'), ('s', 'Item short'), ('1', 'Customer not responding'), ('2', 'Stock NA'), ('3', 'Out of Range'), ('4', 'Retailer Order'), ('5', 'Others')], max_length=50, null=True, verbose_name='Reason for Cancellation')),
                ('order_closed', models.BooleanField(blank=True, default=False, null=True)),
                ('order_app_type', models.CharField(blank=True, choices=[('pos_walkin', 'Pos Walkin'), ('pos_ecomm', 'Pos Ecomm')], max_length=50, null=True)),
                ('estimate_delivery_time', models.CharField(blank=True, max_length=50, null=True)),
                ('pick_list_pdf', models.FileField(blank=True, null=True, upload_to='shop_photos/shop_name/documents/')),
                ('points_added', models.IntegerField(default=0, null=True)),
                ('dispatch_delivery', models.BooleanField(default=False)),
                ('delivery_option', models.CharField(blank=True, choices=[('1', 'Self Pick'), ('2', 'Home Delivery')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipment_status', models.CharField(blank=True, choices=[('SHIPMENT_CREATED', 'QC Pending'), ('READY_TO_SHIP', 'QC Passed'), ('PARTIALLY_QC_PASSED', 'Partially QC Passed'), ('QC_REJECTED', 'QC Rejected'), ('MOVED_TO_DISPATCH', 'Moved to dispatch'), ('IN_TRANSIT_TO_DISPATCH', 'In Transit to Dispatch'), ('READY_TO_DISPATCH', 'Ready to Dispatch'), ('OUT_FOR_DELIVERY', 'Out for Delivery'), ('FULLY_RETURNED_AND_COMPLETED', 'Fully Returned and Completed'), ('PARTIALLY_DELIVERED_AND_COMPLETED', 'Partially Delivered and Completed'), ('FULLY_DELIVERED_AND_COMPLETED', 'Fully Delivered and Completed'), ('FULLY_RETURNED_AND_VERIFIED', 'Fully Returned and Verified'), ('PARTIALLY_DELIVERED_AND_VERIFIED', 'Partially Delivered and Verified'), ('FULLY_DELIVERED_AND_VERIFIED', 'Fully Delivered and Verified'), ('FULLY_RETURNED_AND_CLOSED', 'Fully Returned and Closed'), ('PARTIALLY_DELIVERED_AND_CLOSED', 'Partially Delivered and Closed'), ('FULLY_DELIVERED_AND_CLOSED', 'Fully Delivered and Closed'), ('CANCELLED', 'Cancelled'), ('closed', 'Closed'), ('RESCHEDULED', 'Rescheduled'), ('DELIVERED', 'Delivered'), ('QC_STARTED', 'QC Started'), ('NOT_ATTEMPT', 'Not Attempt')], default='SHIPMENT_CREATED', max_length=50, null=True, verbose_name='Current Shipment Status')),
                ('return_reason', models.CharField(blank=True, choices=[('cash_not_available', 'Cash not available'), ('shop_closed', 'Shop Closed'), ('recheduler_by_seller', 'Rescheduled by seller'), ('unable_to_attempt', 'Unable to attempt'), ('wrong_order', 'Wrong Order'), ('item_miss_match', 'Item miss match'), ('damaged_item', 'Damaged item'), ('left_at_warehouse', 'Left at Warehouse'), ('before_delivery_cancelled', 'Before Delivery Cancelled'), ('near_expiry', 'Near Expiry'), ('rate_issue', 'Rate issue'), ('already_purchased', 'Already Purchased'), ('gst_issue', 'GST Issue'), ('CLEAN', 'Item not clean'), ('CUS_CAN', 'Cancelled by customer'), ('CUS_AVL', 'Customer not available'), ('DEFECT', 'Manufacturing Defect'), ('SHORT', 'Item short'), ('rsn_not_ent_by_dlv_boy', 'Reason not entered by Delivery Boy')], max_length=50, null=True, verbose_name='Reason for Return')),
                ('invoice_number', models.CharField(blank=True, max_length=255, null=True)),
                ('no_of_crates', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. Of Crates Shipped')),
                ('no_of_packets', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. Of Packets Shipped')),
                ('no_of_sacks', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. Of Sacks Shipped')),
                ('no_of_crates_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. Of Crates Collected')),
                ('no_of_packets_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. Of Packets Collected')),
                ('no_of_sacks_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='No. Of Sacks Collected')),
                ('is_customer_notified', models.BooleanField(default=False)),
                ('qc_started_at', models.DateTimeField(blank=True, null=True)),
                ('qc_completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Invoice Date')),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Update Delivery/ Returns/ Damage',
            },
        ),
        migrations.CreateModel(
            name='OrderedProductBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(blank=True, max_length=50, null=True)),
                ('bin_ids', models.CharField(blank=True, max_length=17, null=True, verbose_name='bin_id')),
                ('quantity', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='NO. OF PIECES TO SHIP')),
                ('ordered_pieces', models.CharField(blank=True, max_length=10, null=True)),
                ('delivered_qty', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Delivered Pieces')),
                ('already_shipped_qty', models.PositiveIntegerField(default=0)),
                ('expiry_date', models.CharField(blank=True, max_length=30, null=True)),
                ('returned_qty', models.PositiveIntegerField(default=0, verbose_name='Returned Pieces')),
                ('damaged_qty', models.PositiveIntegerField(default=0, verbose_name='Damaged Pieces')),
                ('returned_damage_qty', models.PositiveIntegerField(default=0, verbose_name='Damaged Return')),
                ('returned_missing_qty', models.PositiveIntegerField(default=0, verbose_name='Damaged Missing')),
                ('pickup_quantity', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Picked Pieces')),
                ('expired_qty', models.PositiveIntegerField(default=0, verbose_name='Expired Pieces')),
                ('missing_qty', models.PositiveIntegerField(default=0, verbose_name='Missing Pieces')),
                ('rejected_qty', models.PositiveIntegerField(default=0, verbose_name='Rejected Pieces')),
                ('reason_for_rejection', models.PositiveIntegerField(blank=True, choices=[(1, 'Near Expiry'), (2, 'Not Clean'), (3, 'Damaged'), (4, 'Expired'), (10, 'Other')], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderedProductMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.IntegerField(choices=[(0, 'Free'), (1, 'Purchased')], default=1)),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipped_qty', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Shipped Pieces')),
                ('delivered_qty', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Delivered Pieces')),
                ('returned_qty', models.PositiveIntegerField(default=0, verbose_name='Returned Pieces')),
                ('damaged_qty', models.PositiveIntegerField(default=0, verbose_name='Damaged Pieces')),
                ('returned_damage_qty', models.PositiveIntegerField(default=0, verbose_name='Damaged Return')),
                ('returned_missing_qty', models.PositiveIntegerField(default=0, verbose_name='Damaged Missing')),
                ('expired_qty', models.PositiveIntegerField(default=0, verbose_name='Expired Pieces')),
                ('missing_qty', models.PositiveIntegerField(default=0, verbose_name='Missing Pieces')),
                ('rejected_qty', models.PositiveIntegerField(default=0, verbose_name='Rejected Pieces')),
                ('product_tax_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('effective_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('discounted_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('delivered_at_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('cancellation_date', models.DateTimeField(blank=True, null=True)),
                ('picked_pieces', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Picked Pieces')),
                ('is_qc_done', models.BooleanField(default=False)),
                ('is_return_verified', models.BooleanField(default=False)),
                ('initial_returned_qty', models.PositiveIntegerField(default=0, help_text='Returned damaged by delivery boy', verbose_name='Initially Returned Quantity')),
                ('initial_delivered_qty', models.PositiveIntegerField(default=0, help_text='Shipped - initial returned qty', verbose_name='Initially Delivered Quantity')),
            ],
        ),
        migrations.CreateModel(
            name='OrderReturn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offers', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('free_qty_map', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('return_reason', models.CharField(blank=True, choices=[(0, 'Wrong Order'), (1, 'Item miss match'), (2, 'Damaged item'), (3, 'Near Expiry'), (4, 'Manufacturing Defect')], max_length=50, null=True, verbose_name='Reason for Return')),
                ('refund_amount', models.FloatField(default=0)),
                ('refund_points', models.IntegerField(default=0)),
                ('discount_adjusted', models.FloatField(default=0)),
                ('refund_mode', models.CharField(choices=[('cash', 'Cash Payment'), ('online', 'Online Payment'), ('credit', 'Credit Payment')], default='cash', max_length=50)),
                ('status', models.CharField(choices=[('created', 'Created'), ('completed', 'Completed')], default='created', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('paid_amount', models.DecimalField(decimal_places=4, default='0.0000', max_digits=20)),
                ('payment_choice', models.CharField(choices=[('cash_on_delivery', 'Cash On Delivery'), ('neft', 'NEFT'), ('credit', 'credit')], default='cash_on_delivery', max_length=30, verbose_name='Payment Mode')),
                ('neft_reference_number', models.CharField(blank=True, max_length=255, null=True)),
                ('imei_no', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_status', models.CharField(blank=True, choices=[('payment_done_approval_pending', 'Payment done approval pending'), ('cash_collected', 'Cash Collected'), ('approved_by_finance', 'Approved by finance')], default='payment_done_approval_pending', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PickerDashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picking_status', models.CharField(choices=[('picking_pending', 'Picking Pending'), ('picking_assigned', 'Picking Assigned'), ('picking_in_progress', 'Picking In Progress'), ('picking_complete', 'Picking Complete'), ('picking_cancelled', 'Picking Cancelled'), ('moved_to_qc', 'Moved To QC Area')], default='picking_pending', max_length=50)),
                ('picklist_id', models.CharField(blank=True, max_length=255, null=True)),
                ('pick_list_pdf', models.FileField(blank=True, null=True, upload_to='shop_photos/shop_name/documents/picker/')),
                ('picker_assigned_date', models.DateTimeField(blank=True, default='2020-09-29', null=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('refreshed_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(null=True)),
                ('moved_to_qc_at', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PickerUserAssignmentLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResponseComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Comment Date')),
            ],
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReturnItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_qty', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReturnProductMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_returned_qty', models.PositiveIntegerField(default=0)),
                ('reusable_qty', models.PositiveIntegerField(default=0)),
                ('damaged_qty', models.PositiveIntegerField(default=0)),
                ('manufacture_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShipmentNotAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('not_attempt_reason', models.CharField(choices=[('unable_to_attempt', 'UNABLE TO ATTEMPT'), ('wrong_order', 'WRONG ORDER'), ('wrong_delivery_address', 'WRONG DELIVERY ADDRESS'), ('item_miss_match', 'ITEM MISS MATCH'), ('damaged_item', 'DIFFERENT ROUTE'), ('damaged_item', 'DAMAGED ITEM'), ('more_items_to_carry', 'MORE ITEMS TO CARRY')], max_length=50, verbose_name='Reason for Not Attempt')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Shipment Not Attempt',
            },
        ),
        migrations.CreateModel(
            name='ShipmentPackaging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('packaging_type', models.CharField(choices=[('CRATE', 'Crate'), ('SACK', 'Sack'), ('BOX', 'Box')], max_length=50)),
                ('status', models.CharField(choices=[('PACKED', 'Packed'), ('READY_TO_DISPATCH', 'Ready to dispatch'), ('REJECTED', 'Rejected'), ('DISPATCHED', 'Dispatched'), ('DELIVERED', 'Delivered'), ('RETURN_VERIFIED', 'Return Verified'), ('RETURN_MISSING', 'Return Missing'), ('RETURN_DAMAGED', 'Return Damaged')], default='PACKED', max_length=50)),
                ('reason_for_rejection', models.CharField(choices=[(1, 'Package not found'), (2, 'Faulty package'), (10, 'Other')], max_length=30, null=True)),
                ('movement_type', models.CharField(choices=[('RETURNED', 'Returned'), ('RESCHEDULED', 'Rescheduled'), ('NOT_ATTEMPT', 'Not Attempt'), ('DISPATCH', 'Dispatch')], default='DISPATCH', max_length=20)),
                ('return_remark', models.CharField(choices=[('LABEL_MISSING', 'Label Missing'), ('LABEL_DAMAGED', 'Label Damaged'), ('OTHER', 'Other')], max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShipmentPackagingBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('batch_id', models.CharField(max_length=50)),
                ('return_qty', models.PositiveIntegerField(default=0)),
                ('damaged_qty', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShipmentPackagingMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('quantity', models.PositiveIntegerField(null=True)),
                ('return_qty', models.PositiveIntegerField(default=0)),
                ('damaged_qty', models.PositiveIntegerField(default=0)),
                ('missing_qty', models.PositiveIntegerField(default=0)),
                ('is_verified', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShipmentRescheduling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rescheduling_reason', models.CharField(choices=[('cash_not_available', 'Cash not available'), ('shop_closed', 'Shop Closed'), ('recheduler_by_seller', 'Rescheduled by seller'), ('unable_to_attempt', 'Unable to attempt')], max_length=50, verbose_name='Reason for Rescheduling')),
                ('rescheduling_date', models.DateField()),
                ('rescheduled_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Shipment Rescheduling',
            },
        ),
        migrations.CreateModel(
            name='ShopCrate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_available', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispatch_no', models.CharField(max_length=50, null=True, unique=True)),
                ('vehicle_no', models.CharField(max_length=50)),
                ('trip_status', models.CharField(choices=[('READY', 'Ready'), ('CANCELLED', 'Cancelled'), ('STARTED', 'Started'), ('COMPLETED', 'Completed'), ('CLOSED', 'Return Verified'), ('TRANSFERRED', 'Payment Verified')], default='READY', max_length=100)),
                ('e_way_bill_no', models.CharField(blank=True, max_length=50, null=True)),
                ('starts_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('received_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('opening_kms', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Vehicle Opening Trip(Kms)')),
                ('closing_kms', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Vehicle Closing Trip(Kms)')),
                ('no_of_crates', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total crates shipped')),
                ('no_of_packets', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total packets shipped')),
                ('no_of_sacks', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total sacks shipped')),
                ('no_of_crates_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total crates collected')),
                ('no_of_packets_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total packets collected')),
                ('no_of_sacks_check', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Total sacks collected')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('weight', models.FloatField(default=0, null=True, verbose_name='Trip weight')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='last_mile_trip_created_by', to='accounts.User')),
                ('delivery_boy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_delivered_by_user', to='accounts.UserWithName', verbose_name='Delivery Boy')),
            ],
        ),
    ]

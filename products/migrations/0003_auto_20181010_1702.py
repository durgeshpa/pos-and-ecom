# Generated by Django 2.1 on 2018-10-10 17:02

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0002_auto_20181008_1319'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCSV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='products/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterField(
            model_name='color',
            name='color_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='flavor',
            name='flavor_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='fragrance',
            name='fragrance_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='packagesize',
            name='pack_height',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_UNIT_NAME', message='Invalid unit name (eg: 10 kg, 5litres)', regex='^\\d+(\\S|\\s)[a-zA-Z]+$')]),
        ),
        migrations.AlterField(
            model_name='packagesize',
            name='pack_length',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_UNIT_NAME', message='Invalid unit name (eg: 10 kg, 5litres)', regex='^\\d+(\\S|\\s)[a-zA-Z]+$')]),
        ),
        migrations.AlterField(
            model_name='packagesize',
            name='pack_size_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='packagesize',
            name='pack_size_unit',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_UNIT_NAME', message='Invalid unit name (eg: 10 kg, 5litres)', regex='^\\d+(\\S|\\s)[a-zA-Z]+$')]),
        ),
        migrations.AlterField(
            model_name='packagesize',
            name='pack_width',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_UNIT_NAME', message='Invalid unit name (eg: 10 kg, 5litres)', regex='^\\d+(\\S|\\s)[a-zA-Z]+$')]),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_ean_code',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_EAN_CODE', message='Invalid EAN code. Exactly 13 numbers required', regex='^\\d{13}$')]),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_PRODUCT_NAME', message='Invalid product name. Special characters allowed are _ , @ . / # & + -', regex='^[ \\w\\$_,@./#&+-]*$')]),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_short_description',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_PRODUCT_NAME', message='Invalid product name. Special characters allowed are _ , @ . / # & + -', regex='^[ \\w\\$_,@./#&+-]*$')]),
        ),
        migrations.AlterField(
            model_name='producthistory',
            name='product_ean_code',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_EAN_CODE', message='Invalid EAN code. Exactly 13 numbers required', regex='^\\d{13}$')]),
        ),
        migrations.AlterField(
            model_name='producthistory',
            name='product_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_PRODUCT_NAME', message='Invalid product name. Special characters allowed are _ , @ . / # & + -', regex='^[ \\w\\$_,@./#&+-]*$')]),
        ),
        migrations.AlterField(
            model_name='producthistory',
            name='product_short_description',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_PRODUCT_NAME', message='Invalid product name. Special characters allowed are _ , @ . / # & + -', regex='^[ \\w\\$_,@./#&+-]*$')]),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='image_alt_text',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='productimage',
            name='image_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='productsurcharge',
            name='surcharge_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='size',
            name='size_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='size',
            name='size_unit',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_UNIT_NAME', message='Invalid unit name (eg: 10 kg, 5litres)', regex='^\\d+(\\S|\\s)[a-zA-Z]+$')]),
        ),
        migrations.AlterField(
            model_name='size',
            name='size_value',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_VALUE', message='Invalid value. Only numbers are allowed', regex='^[0-9 ]+$')]),
        ),
        migrations.AlterField(
            model_name='tax',
            name='tax_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='weight',
            name='weight_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(code='INVALID_NAME', message='Invalid name. Only alphabets are allowed', regex='^[a-zA-Z\\s]{2,255}$')]),
        ),
        migrations.AlterField(
            model_name='weight',
            name='weight_unit',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='INVALID_UNIT_NAME', message='Invalid unit name (eg: 10 kg, 5litres)', regex='^\\d+(\\S|\\s)[a-zA-Z]+$')]),
        ),
    ]
